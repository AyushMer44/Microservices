#spring.application.name=API-GATEWAY
#
#server.port=8085
#
#eureka.instance.prefer-ip-address=true
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka
#
#spring.cloud.gateway.mvc.routes= id: USER-SERVICE

spring:
  application:
    name: API-GATEWAY
  cloud:
    gateway:
        routes:
          - id: USER-SERVICE
            uri: lb://USER-SERVICE
            predicates:
              - Path=/users/**

          - id: HOTEL-SERVICE
            uri: lb://HOTEL-SERVICE
            predicates:
              - Path=/hotels/**,/staffs/**

          - id: RATING-SERVICE
            uri: lb://RATING-SERVICE
            predicates:
              - Path=/ratings/**

  #    spring.main.allow-bean-definition-overriding=true
#  main:
#    allow-bean-definition-overriding: true

server:
  port: 8085


eureka:
  instance:
    prefer-ip-address: true

  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

# Spring security with OKTA. OKTA Configuration for API Gateway.

okta:
  oauth2:
    issuer: https://dev-79800920.okta.com/oauth2/default
    audience: api://default
    client-id: 0oahnj5b60cGTZc185d7
    client-secret: yDydfUg08DGPepKMZSsiKZnigFWoD5u-kyaSn-zcC27Ud6d34dwQoNTSZlsxkD4u
    scopes: openid,profile,email,offline_access


